//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NdefLibrary.Ndef {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class NdefExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NdefExceptionMessages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NdefLibrary.Ndef.NdefExceptionMessages", typeof(NdefExceptionMessages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown format for class of device information. ähnelt.
        /// </summary>
        public static string ExBtCodUnknownFormat {
            get {
                return ResourceManager.GetString("ExBtCodUnknownFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encoded Bluetooth OOB data length does not match payload length. ähnelt.
        /// </summary>
        public static string ExBtInvalidLength {
            get {
                return ResourceManager.GetString("ExBtInvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid length of the simple pairing hash C (should be 16 octets). ähnelt.
        /// </summary>
        public static string ExBtInvalidLengthSimplePairingHashC {
            get {
                return ResourceManager.GetString("ExBtInvalidLengthSimplePairingHashC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid length of the simple pairing randomizer R (should be 16 octets). ähnelt.
        /// </summary>
        public static string ExBtInvalidLengthSimplePairingRandomizerR {
            get {
                return ResourceManager.GetString("ExBtInvalidLengthSimplePairingRandomizerR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OOB data does not reach minumum length of 8 bytes. ähnelt.
        /// </summary>
        public static string ExBtInvalidMinimumLength {
            get {
                return ResourceManager.GetString("ExBtInvalidMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bluetooth Device address must be defined. ähnelt.
        /// </summary>
        public static string ExBtNoDeviceAddress {
            get {
                return ResourceManager.GetString("ExBtNoDeviceAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No valid Bluetooth address in hexadecimal format. ähnelt.
        /// </summary>
        public static string ExBtNoValidHexAddress {
            get {
                return ResourceManager.GetString("ExBtNoValidHexAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No valid Bluetooth Service Class ID. ähnelt.
        /// </summary>
        public static string ExBtNoValidServiceClassId {
            get {
                return ResourceManager.GetString("ExBtNoValidServiceClassId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bluetooth Service Class Length invalid. ähnelt.
        /// </summary>
        public static string ExBtNoValidServiceClassLength {
            get {
                return ResourceManager.GetString("ExBtNoValidServiceClassLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HERE Maps URI schemes require an AppId. ähnelt.
        /// </summary>
        public static string ExGeoNoHereMapsAppId {
            get {
                return ResourceManager.GetString("ExGeoNoHereMapsAppId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Carrier Data Reference present in Handover Select / Alternative Carrier record. ähnelt.
        /// </summary>
        public static string ExHandoverAcCarrierNoData {
            get {
                return ResourceManager.GetString("ExHandoverAcCarrierNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data Reference is too long - use the record ID in max 255 characters. ähnelt.
        /// </summary>
        public static string ExHandoverDataReferenceTooLong {
            get {
                return ResourceManager.GetString("ExHandoverDataReferenceTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many auxiliary data references - use max 255 data references. ähnelt.
        /// </summary>
        public static string ExHandoverDataTooManyAuxiliaryReferences {
            get {
                return ResourceManager.GetString("ExHandoverDataTooManyAuxiliaryReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid error data. ähnelt.
        /// </summary>
        public static string ExHandoverErrorInvalidData {
            get {
                return ResourceManager.GetString("ExHandoverErrorInvalidData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can not create Handover Error record based on the provided source data. ähnelt.
        /// </summary>
        public static string ExHandoverErrorInvalidSourceData {
            get {
                return ResourceManager.GetString("ExHandoverErrorInvalidSourceData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No error data present. ähnelt.
        /// </summary>
        public static string ExHandoverErrorNoData {
            get {
                return ResourceManager.GetString("ExHandoverErrorNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No error reason present. ähnelt.
        /// </summary>
        public static string ExHandoverErrorNoReason {
            get {
                return ResourceManager.GetString("ExHandoverErrorNoReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown error reason. ähnelt.
        /// </summary>
        public static string ExHandoverErrorUnknownReason {
            get {
                return ResourceManager.GetString("ExHandoverErrorUnknownReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Handover version must be one byte, containing major and minor fields. ähnelt.
        /// </summary>
        public static string ExHandoverInvalidVersion {
            get {
                return ResourceManager.GetString("ExHandoverInvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Alternative Carrier record needs to define a carrier data reference. ähnelt.
        /// </summary>
        public static string ExHandoverNoCarrierDataReference {
            get {
                return ResourceManager.GetString("ExHandoverNoCarrierDataReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can not create Handover Select message - found illegal record. ähnelt.
        /// </summary>
        public static string ExHandoverSelectMsgInvalidRecords {
            get {
                return ResourceManager.GetString("ExHandoverSelectMsgInvalidRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No calendar data found in the supplied calendar data. ähnelt.
        /// </summary>
        public static string ExIcalendarNoCalendarFound {
            get {
                return ResourceManager.GetString("ExIcalendarNoCalendarFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The supplied calendar information does not contain a valid event / appointment. ähnelt.
        /// </summary>
        public static string ExIcalendarNoEventFound {
            get {
                return ResourceManager.GetString("ExIcalendarNoEventFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempted to instantiate new record from incompatible record. ähnelt.
        /// </summary>
        public static string ExInvalidCopy {
            get {
                return ResourceManager.GetString("ExInvalidCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arguments for LaunchApp must not be empty. ähnelt.
        /// </summary>
        public static string ExLaunchAppArgumentsEmpty {
            get {
                return ResourceManager.GetString("ExLaunchAppArgumentsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to assemble LaunchApp payload: length of platform / AppID tuple more than 255 characters. ähnelt.
        /// </summary>
        public static string ExLaunchAppPlatformLength {
            get {
                return ResourceManager.GetString("ExLaunchAppPlatformLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to assemble LaunchApp payload: at least one platform / AppID tuple is required. ähnelt.
        /// </summary>
        public static string ExLaunchAppPlatformMissing {
            get {
                return ResourceManager.GetString("ExLaunchAppPlatformMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one platform / app ID tuple needs to be defined. ähnelt.
        /// </summary>
        public static string ExLaunchAppPlatformsEmpty {
            get {
                return ResourceManager.GetString("ExLaunchAppPlatformsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For a Windows Phone platform ID, please supply the 36 character product ID containing only hexadecimal characters and &apos;-&apos;. ähnelt.
        /// </summary>
        public static string ExLaunchAppWpId {
            get {
                return ResourceManager.GetString("ExLaunchAppWpId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recipient address must not be empty. ähnelt.
        /// </summary>
        public static string ExMailtoAddressEmpty {
            get {
                return ResourceManager.GetString("ExMailtoAddressEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The recipient address does not appear to be valid. ähnelt.
        /// </summary>
        public static string ExMailtoAddressNotValid {
            get {
                return ResourceManager.GetString("ExMailtoAddressNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Message Begin flag present after first record. ähnelt.
        /// </summary>
        public static string ExMessageBeginLate {
            get {
                return ResourceManager.GetString("ExMessageBeginLate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Expected Message Begin missing in first record. ähnelt.
        /// </summary>
        public static string ExMessageBeginMissing {
            get {
                return ResourceManager.GetString("ExMessageBeginMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Message End flag present after last record. ähnelt.
        /// </summary>
        public static string ExMessageEndLate {
            get {
                return ResourceManager.GetString("ExMessageEndLate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Invalid chunked data, Id Length != 0. ähnelt.
        /// </summary>
        public static string ExMessageInvalidChunkedId {
            get {
                return ResourceManager.GetString("ExMessageInvalidChunkedId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Invalid chunked data, Type Length != 0. ähnelt.
        /// </summary>
        public static string ExMessageInvalidChunkedType {
            get {
                return ResourceManager.GetString("ExMessageInvalidChunkedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Malformed NDEF Message, missing begin or end. ähnelt.
        /// </summary>
        public static string ExMessageNoBeginOrEnd {
            get {
                return ResourceManager.GetString("ExMessageNoBeginOrEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Partial chunk not empty or typeNameFormat not 0x06 as expected. ähnelt.
        /// </summary>
        public static string ExMessagePartialChunk {
            get {
                return ResourceManager.GetString("ExMessagePartialChunk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ndef parse error: Unexpected end of message. ähnelt.
        /// </summary>
        public static string ExMessageUnexpectedEnd {
            get {
                return ResourceManager.GetString("ExMessageUnexpectedEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language code must be 5 characters. ähnelt.
        /// </summary>
        public static string ExNearSpeakLanguageWrongLength {
            get {
                return ResourceManager.GetString("ExNearSpeakLanguageWrongLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online ID must be set. ähnelt.
        /// </summary>
        public static string ExNearSpeakNoCloudId {
            get {
                return ResourceManager.GetString("ExNearSpeakNoCloudId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language code must be defined. ähnelt.
        /// </summary>
        public static string ExNearSpeakNoLanguage {
            get {
                return ResourceManager.GetString("ExNearSpeakNoLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text to speak must not be empty. ähnelt.
        /// </summary>
        public static string ExNearSpeakNoText {
            get {
                return ResourceManager.GetString("ExNearSpeakNoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No valid NearSpeak type identifier. ähnelt.
        /// </summary>
        public static string ExNearSpeakNoValidType {
            get {
                return ResourceManager.GetString("ExNearSpeakNoValidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ProductName for Nokia Accessories record must not be empty. ähnelt.
        /// </summary>
        public static string ExNokiaAccessoriesProductEmpty {
            get {
                return ResourceManager.GetString("ExNokiaAccessoriesProductEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Serial number for Nokia Accessories must not be empty. ähnelt.
        /// </summary>
        public static string ExNokiaAccessoriesSerialEmpty {
            get {
                return ResourceManager.GetString("ExNokiaAccessoriesSerialEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Serial number must be 19 chars, decimal numbers only. ähnelt.
        /// </summary>
        public static string ExNokiaAccessoriesSerialFormat {
            get {
                return ResourceManager.GetString("ExNokiaAccessoriesSerialFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The raw URI can only be retrieved if the URI is not abbreviated by the record. ähnelt.
        /// </summary>
        public static string ExRawUriNoAbbreviation {
            get {
                return ResourceManager.GetString("ExRawUriNoAbbreviation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Empty record must not have a payload or a type. ähnelt.
        /// </summary>
        public static string ExRecordEmptyWithTypeOrPayload {
            get {
                return ResourceManager.GetString("ExRecordEmptyWithTypeOrPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Type set for record. ähnelt.
        /// </summary>
        public static string ExRecordNoType {
            get {
                return ResourceManager.GetString("ExRecordNoType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Id must not be set for middle or terminating record (TNF = Unchanged). ähnelt.
        /// </summary>
        public static string ExRecordUnchangedId {
            get {
                return ResourceManager.GetString("ExRecordUnchangedId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Record with TNF Unchanged must have an empty type name. ähnelt.
        /// </summary>
        public static string ExRecordUnchangedTypeName {
            get {
                return ResourceManager.GetString("ExRecordUnchangedTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Body text for SMS record must not be empty. ähnelt.
        /// </summary>
        public static string ExSmsBodyEmpty {
            get {
                return ResourceManager.GetString("ExSmsBodyEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number for SMS record must not be empty. ähnelt.
        /// </summary>
        public static string ExSmsNumberEmpty {
            get {
                return ResourceManager.GetString("ExSmsNumberEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Social user name must not be empty. ähnelt.
        /// </summary>
        public static string ExSocialNoUser {
            get {
                return ResourceManager.GetString("ExSocialNoUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uri of Smart Poster must not be empty. ähnelt.
        /// </summary>
        public static string ExSpUriEmpty {
            get {
                return ResourceManager.GetString("ExSpUriEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number for telephone record must not be empty. ähnelt.
        /// </summary>
        public static string ExTelNumberEmpty {
            get {
                return ResourceManager.GetString("ExTelNumberEmpty", resourceCulture);
            }
        }
    }
}
